{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Payload Query": {
    "prefix": "pgq",
    "body": [
        "export const ${1: nameOfQuery} = async (",
        "  req: PayloadRequest,",
        "  res: Response,",
        "  next: NextFunction",
        ") => {",
        "  try {",
        "\tconst {",
        "\t  params: { ${2:model}Id },",
        "\t} = req;",
        "",
        "\tconst ${2:model} = await req.payload.findByID({",
        "\t  collection: \"${2:model}s\",",
        "\t  id: ${2:model}Id,",
        "\t});",
        "",
        "\t// Logic for this query",
        "",
        "\treturn res.send({ ${2:model} });",
        "  } catch (error) {",
        "\treturn next(error);",
        "  }",
        "};"
    ],
    "description": "The basic skeleton for a payload query that a custom route is hooked up to."
}
}