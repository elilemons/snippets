{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Payload beforeChange hook": {
		"prefix": "bch",
		"body": [
			"import { $1 } from \"@trbl/installmint-lib\";",
			"import { BeforeChangeHook } from \"payload/dist/collections/config/types\";",
			"",
			"export const beforeChange: BeforeChangeHook<$1> = async ({",
			"  req,",
			"  data,",
			"  operation,",
			"  originalDoc,",
			"}) => {",
			"  const { user } = req;",
			"  const beforeChangeData = { ...data };",
			"  // TODO REMOVE TEST CODE",
			"  console.log({ operation })",
			"",
			"  // Do something on create",
			"  if (operation === \"create\" && user) {",
			"    // TODO REMOVE TEST CODE",
			"    console.log(\"Creating $1\", { beforeChangeData })",
			"  }",
			"",
			"  // Do something on Update",
			"  if (",
			"    operation === \"update\"  ",
			"  ) {",
			"   console.log(\"Updating $1\", { originalDoc, beforeChangeData })",
			"  }",
			"",
			"  return beforeChangeData;",
			"};",
			""
		],
		"description": "Payload beforeChange hook"
	}
}